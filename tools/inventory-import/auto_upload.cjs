#!/usr/bin/env node
// ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö: node auto_upload.cjs "<local-excel-path>" [--bucket=xxx.appspot.com] [--dest=imports/master_devices.xlsx]
const chokidar = require("chokidar");
const { Storage } = require("@google-cloud/storage");
const path = require("path");
const fs = require("fs");

// ‡πÉ‡∏ä‡πâ serviceAccount ‡πÄ‡∏î‡∏¥‡∏° (‡∏Ç‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ)
const sa = require("./serviceAccount.json");
const storage = new Storage({ credentials: sa, projectId: sa.project_id });
const defaultBucket = `${sa.project_id}.appspot.com`;

const localPath = process.argv[2];
const bucketName = (process.argv.find(a => a.startsWith("--bucket=")) || "").split("=")[1] || defaultBucket;
const dest = (process.argv.find(a => a.startsWith("--dest=")) || "").split("=")[1] || "imports/master_devices.xlsx";

if (!localPath) { console.error("‡∏£‡∏∞‡∏ö‡∏∏ path ‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô: node auto_upload.cjs \"C:\\‡πÑ‡∏ü‡∏•‡πå.xlsx\""); process.exit(1); }
if (!fs.existsSync(localPath)) { console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå:", localPath); process.exit(1); }

const bucket = storage.bucket(bucketName);
let timer = null;

async function uploadOnce() {
  console.log(`‚¨ÜÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‚Üí gs://${bucketName}/${dest}`);
  await bucket.upload(localPath, {
    destination: dest,
    contentType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    resumable: false,
    validation: false,
  });
  console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ${new Date().toLocaleString()}`);
}

console.log("üëÄ Watching:", path.resolve(localPath));
await uploadOnce(); // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
chokidar.watch(localPath, { ignoreInitial: true }).on("all", () => {
  clearTimeout(timer);
  timer = setTimeout(uploadOnce, 800); // debounce
});
